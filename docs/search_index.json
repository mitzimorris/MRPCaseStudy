[["index.html", "Multilevel Regression and Poststratification Case Studies Overview", " Multilevel Regression and Poststratification Case Studies Juan Lopez-Martin, Justin H. Phillips, and Andrew Gelman1 2020-12-11 Overview Multilevel Modeling and Poststratification (MRP) is used in two closely related applications: Small-area estimation: Sub-national surveys are not always available, and even then finding comparable surveys across sub-national units is rare. However, public views at the sub-national level are often central, as many policies are decided by local goverments or sub-national area representatives at national assemblies. MRP allows us to use national surveys to generate reliable estimates of sub-national opinion (Park, Gelman, and Bafumi (2004), Lax and Phillips (2009a), Lax and Phillips (2009b), Kiewiet de Jonge, Langer, and Sinozich (2018)). Using nonrepresentative surveys: Many surveys face serious difficulties in recruiting representative samples of participants (e.g. because of non-response bias). However, with proper statistical adjustment, nonrepresentative surveys can be used to generate accurate opinion estimates (Wang et al. (2015), Downes et al. (2018)). In this case study, we will show how to use MRP to estimate public opinion. We start with an overview of the survey and population data and walk through the processing necessary to align the two. Next, we describe the two essential stages of MRP: building an individual-response model and using poststratification. The individual-response model takes all the responses in the national survey and uses multilevel modeling in order to predict opinion estimates based on demographic-geographic subgroups (e.g. the subgroup consisting of white women between ages 50-59 with postgraduate education residing in California). The poststratification process takes these these opinion estimates by subgroups and weights them by the subgroup frequency at the (national or subnational) unit of interest. Then we show how MRP can be used to obtain accurate national estimates from a biased sample. Lastly, we introduce some practical considerations. All the code is also available in the Rmarkdown file on GitHub These case studies are still under development. Please send comments, questions, and suggestions to jl5522@columbia.edu. References "],["survey-and-population-datasets.html", "Chapter 1 Survey and Population Datasets 1.1 Survey Data 1.2 Population Data 1.3 Multilevel Model Group-level Predictors 1.4 Exploratory Data Analysis", " Chapter 1 Survey and Population Datasets In these case studies we use the 2018 Cooperative Congressional Election Study (CCES), a US nationwide survey designed by a consortium of 60 research teams and administered by YouGov as our source of public opinion data, and the 2014-2018 American Community Survey (ACS), a set of yearly surveys conducted by the US Census, as our source of public opinion data. 1.1 Survey Data The 2018 CCES raw survey data can be downloaded from the CCES Dataverse via the link: https://dataverse.harvard.edu/api/access/datafile/3588803?format=original&amp;gbrecs=true; by default the downloaded filename is called cces18_common_vv.csv. The outcome of interest that we will use for this introduction is required abortion coverage by workplace insurance: Allow employers to decline coverage of abortions in insurance plans (Support / Oppose) Survey data must include some respondent demographic information and some type of geographic indicator (e.g. state, congressional district). Apart from the outcome measure, we will consider a set of factors to define the geographic-demographic subgroups. Even though some of these variables may be continous (e.g. age, income), we must make sure to split them into intervals to create a factor with different levels. Importantly, and as we will see in a moment, these factors and their corresponding levels need to match the ones in the postratification table. In this case, we will use the following demographic-geographic factors with the indicated levels: State: 50 US states (\\(S = 50\\)). Sex: Female, Male (\\(G = 2\\)). Age: 18-29, 30-39, 40-49, 50-59, 60-69, 70+ (\\(A = 6\\)). Ethnicity: (Non-hispanic) White, Black, Hispanic, Other (which also includes Mixed) (\\(R = 4\\)). Education: No HS, HS, Some college, 4-year college, Post-grad (\\(E = 5\\)). Every MRP study requires some degree of data wrangling in order to make the factors in the survey of interest match the factors available in census data and other population-level surveys and census. Here we use the R Tidyverse to process the survey data so that it aligns with the postratification table. Because initial recoding errors are fatal, it is important to check that each step of the recoding process produces expected results, either by viewing or summarizing the data. Because the data is all tabular data, we use the utility function head to inspect the first few lines of a dataframe before and after each operation. First, we examine the contents of the data as downloaded, looking only at those columns which provide the above demographic-geographic information which are labeled inputstate, gender, birthyr, race, educ. cces18_df &lt;- read.csv(&quot;cces18_common_vv.csv&quot;) inputstate gender birthyr race educ 24 2 1964 5 4 47 2 1971 1 2 39 2 1958 1 3 6 2 1946 4 6 21 2 1972 1 2 4 2 1995 1 1 The demographics for the survery must match the demographics in the population data. If there is not a direct one-to-one relationship between the survey and the population data, the survey data must be recoded until a clean mapping exists. For example, the CCES includes ‘Middle Eastern’ as an option for ethnicity, but this distinction is not available in the post-stratification data, which comes from the the 2014-2018 American Community Survey (ACS), a set of yearly surveys conducted by the US Census. Therefore, people who identified as ‘Middle Eastern’ in the CCES need to be recoded as ‘Other’. We write R functions to encapsulate the recoding steps. Both the CCES survey and the US Census data use numeric FIPS codes to record state information. We can use R factors to map FIPS codes to the standard two-letter state name abbreviations. Because both surveys use this encoding, we make this into a reusbale function recode_fips. The function recode_cces recodes the survey. To facilitate the post-stratification process, where we use the tidyverse to join by column name, it adds columns to the survey data frame whose name matches the columns in the population data. If both datasets have matching column names, we rewrite the column data as needed. state_ab &lt;- datasets::state.abb state_fips &lt;- c(1,2,4,5,6,8,9,10,12,13,15,16,17,18,19,20,21,22,23,24, 25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42, 44,45,46,47,48,49,50,51,53,54,55,56) # recode_fips # The US census and CCES data use FIPS codes to identify states. # Use factors to map codes to 2-letter stats abbreviations. # Because the FIPS codes include the district of Columbia and US territories # there are some gaps in the numbering system. recode_fips &lt;- function(df, column) { factor(df[[column]], levels = state_fips, labels = state_ab) } # rewrite the CCES demographics needed for post-stratification recode_cces &lt;- function(df) { ## State -- factor, labels state abb, levels FIPS code df$state &lt;- recode_fips(df, &quot;inputstate&quot;) ## Gender -- dichotomous (coded as -0.5 Female, +0.5 Male) df$male &lt;- abs(df$gender-2)-0.5 ## ethnicity -- factor df$eth &lt;- factor(df$race, levels = 1:8, labels = c(&quot;White&quot;, &quot;Black&quot;, &quot;Hispanic&quot;, &quot;Asian&quot;, &quot;Native American&quot;, &quot;Mixed&quot;, &quot;Other&quot;, &quot;Middle Eastern&quot;)) %&gt;% fct_collapse(&quot;Other&quot; = c(&quot;Asian&quot;, &quot;Other&quot;, &quot;Middle Eastern&quot;, &quot;Mixed&quot;, &quot;Native American&quot;)) ## Age -- cut into factor df$age &lt;- 2018 - df$birthyr df$age &lt;- cut(as.integer(df$age), breaks = c(0, 29, 39, 49, 59, 69, 120), labels = c(&quot;18-29&quot;,&quot;30-39&quot;,&quot;40-49&quot;,&quot;50-59&quot;,&quot;60-69&quot;,&quot;70+&quot;), ordered_result = TRUE) ## Education -- factor df$educ &lt;- factor(as.integer(df$educ), levels = 1:6, labels = c(&quot;No HS&quot;, &quot;HS&quot;, &quot;Some college&quot;, &quot;Associates&quot;, &quot;4-Year College&quot;, &quot;Post-grad&quot;), ordered = TRUE) %&gt;% fct_collapse(&quot;Some college&quot; = c(&quot;Some college&quot;, &quot;Associates&quot;)) return(df) } We recode the CCES survey. cces18_df &lt;- recode_cces(cces18_df) We check the recoding by viewing the recoded columns of interest. head(select(cces18_df, state, inputstate, male, gender, eth, race, age, birthyr, educ)) state inputstate male gender eth race age birthyr educ MD 24 -0.5 2 Other 5 50-59 1964 Some college TN 47 -0.5 2 White 1 40-49 1971 HS OH 39 -0.5 2 White 1 60-69 1958 Some college CA 6 -0.5 2 Other 4 70+ 1946 Post-grad KY 21 -0.5 2 White 1 40-49 1972 HS AZ 4 -0.5 2 White 1 18-29 1995 No HS Next we get the outcome of interest: all responses to the above question on abortion, coded as “CC18_321d” in the CCES survey. As before, we encapsulate this in an R function which is just general enough to allow us to do the same analysis on any question in the CCES survey. This function drops non-response information; if this information is not missing at random, this introduces (more) bias into our survey. # Return dataframe containing question as 0,1 outcome # and columns for demographic data used in the regression get_question &lt;- function(df, question, label) { df[[label]] &lt;- abs(df[[question]]-2) # Clean and remove NAs select(df, all_of(label), state, eth, male, age, educ) %&gt;% drop_na() } # Dataframe containing the outcome and predictors q_abort_df &lt;- get_question(cces18_df, &quot;CC18_321d&quot;, &quot;abortion&quot;) abortion state eth male age educ 1 MD Other -0.5 50-59 Some college 1 TN White -0.5 40-49 HS 1 OH White -0.5 60-69 Some college 0 CA Other -0.5 70+ Post-grad 1 KY White -0.5 40-49 HS 0 AZ White -0.5 18-29 No HS The full 2018 CCES consist of almost 60,000 respondents. However, most studies work with a smaller national survey. To show how MRP works in these cases, we will take a random sample of 10,000 participants of the CCES and work with the sample instead of the full CCES. Obviously, in a more realistic setting we would always use all the data that we have available. set.seed(1010) # We set the seed to an arbitrary number for reproducibility. q_abort_10K_df &lt;- q_abort_df %&gt;% sample_n(10000) # name encodes the sample size. abortion state eth male age educ 1 WI White -0.5 60-69 4-Year College 1 NJ White -0.5 60-69 HS 0 FL White -0.5 40-49 HS 1 FL White 0.5 70+ Some college 0 IL White -0.5 50-59 Some college 0 OK Other -0.5 18-29 Some college 1.2 Population Data Census data or other population surveys are used to build the poststratification table. This table reflects the number of people in the population of interest corresponding to each combination of the demographic-geographic factors. It is used in the second stage of MRP to poststratify the estimates obtained for each subgroup. Here we will use the 2014-2018 American Community Survey (ACS), a set of yearly surveys conducted by the US Census that provides estimates of the number of US residents as the source of out poststratification variables. The raw ACS survey datasets consist of rows of individual-level and household-level responses. These individual responses have been aggregated as counts per row of the poststratification table. See the appendix for dicussion of processing the ACS data. As specified above, the poststratification table has States Sex Age Ethnicity Education cells, thus the long form of this table has \\(50 \\times 2 \\times 6 \\times 4 \\times 5 = 12,000\\) rows. There are more rows in the poststratification table than observed units in the CCES subsample, which necessarily implies that there are some combinations in the poststratification table that we don’t observe, and it is likely that there are some combinations which are not in the complete CCES survey. It is critical that the factors (and their levels) used in the survey match the factors obtained in the census. In principle, MRP is limited to use individual-level variables that are present both the survey and the census, although later in this case study we relax this requirement. For instance, the CCES includes information on respondent’s religion, but as this information is not available in the census we are not able to use this variable. Similarly, the levels of the factors in the census are required to match the ones in the census. For instance, the CCES includes ‘Middle Eastern’ as an option for ethnicity, but the ACS does not. Therefore, people who identified as ‘Middle Eastern’ in the CCES need to be included in the ‘Other’ category. postrat_df &lt;- read.csv(&quot;postrat_data.csv&quot;) X state eth male age educ n 1 1 White -0.5 18-29 No HS 23948 2 1 White -0.5 18-29 HS 59378 3 1 White -0.5 18-29 Some college 104855 4 1 White -0.5 18-29 4-Year College 37066 5 1 White -0.5 18-29 Post-grad 9378 6 1 White -0.5 30-39 No HS 14303 A quick check of the data shows that the ACS also uses FIPS codes. We recode this column and check our work. postrat_df$state &lt;- recode_fips(postrat_df, &quot;state&quot;) X state eth male age educ n 1 AL White -0.5 18-29 No HS 23948 2 AL White -0.5 18-29 HS 59378 3 AL White -0.5 18-29 Some college 104855 4 AL White -0.5 18-29 4-Year College 37066 5 AL White -0.5 18-29 Post-grad 9378 6 AL White -0.5 30-39 No HS 14303 Here we see that the first row in the poststratification table indicates that there are 23,948 Alabamians that are white, male, between 18 and 29 years old, and without a high school degree. Every MRP study requires some degree of data wrangling in order to make the factors in the survey of interest match the factors available in census data and other population-level surveys and census, which is why we have taken the time here to show the processing steps and to check our work at every step. The code provided in the Appendix shows how to get the ACS data and tabulate the post-stratification matrix. 1.3 Multilevel Model Group-level Predictors The individual-response model used in the first stage can include group-level predictors, which tend to reduce unexplained group level variation by accounting for structured differences among the states. For instance, most national-level surveys in the US tend to include many participants from a state such as New York, but few from a small state like Vermont. This can result in noisy estimates for the effect of being from Vermont. The intuition is that by including state-level predictors, such as the Republican voteshare in a previous election or the percentage of Evangelicals at each state, the model is able to account for how similar is Vermont is to New York and other populous states, and therefore to produce more precise estimates. These group-level predictors do not need to be available in the census nor they have to be converted to factors, and in many cases are readily available. A more detailed discussion on the importance of builidng a reasonable model for predicting opinion, and how state-level predictors can be a key element in this regard, can be found in Lax and Phillips (2009b) and Buttice and Highton (2013). In our example, we will include two state-level predictors: the geographical region (Northeast, North Central, South, and West) and the Republican vote share in the 2016 presidential election. The state-level data is in a CSV file included with this case study. In order to use this data in our analysis, the state column must be coded statepred_df &lt;- read.csv(&#39;statelevel_predictors.csv&#39;, stringsAsFactors=TRUE) state repvote region AL 0.6437414 South AK 0.5838565 West AZ 0.5189002 West AR 0.6428514 South CA 0.3387179 West CO 0.4731667 West 1.4 Exploratory Data Analysis In the previous steps we have obtained a 10,000-person sample from the CCES survey and also generated a poststratification table using census data. As a first exploratory step, we will check if the frequencies for the different levels for the factors considered in the CCES data are similar to the frequencies reported in the census. If this was not the case, we will start suspecting some degree of nonresponse bias in the CCES survey. For clarity, the levels in the plots follow their natural order in the case of age and education, ordering the others by the approximate proportion of Republican support. We see that our 10,000-participant CCES sample does not differ too much from the target population according to the American Community Survey. This should not be surprising, as the CCES intends to use a representative sample. References "],["mrp-intro.html", "Chapter 2 Introduction to Multilevel Modeling and Poststratification (MRP) 2.1 First stage: Estimating the Individual-Response Model 2.2 Second Stage: Poststratification 2.3 MRP for Small Area Estimation 2.4 Adjusting for Nonrepresentative Surveys 2.5 Practical Considerations", " Chapter 2 Introduction to Multilevel Modeling and Poststratification (MRP) The first stage of MRP is building an individual-response model whch takes all responses in a (national-level) survey and uses a multilevel regression model to get estimates and make predictions based on demographic-geographic subgroups (e.g. the subgroup consisting of white women between ages 50-59 with postgraduate education residing in California). The second stage of MRP takes the modeled estimate for each subgroup and weights it by the subgroup frequency at the (national or subnational) unit of interest. 2.1 First stage: Estimating the Individual-Response Model In the first stage we use a multilevel logistic regression model to predict the outcome measure given the different factors we are considering. Having a plausible model to predict opinion is central for MRP to work well. The model we use in this example is described below. It includes varying intercepts for age, ethnicity, and state, where the variation for the state intercepts is in turn influenced by the region effects (coded as indicator variables) and the Republican vote share in the 2016 election. As there are only two levels for gender, it is preferable to model it as a predictor for computational efficiency. Additionally, we include varying intercepts for the interaction between male and ethnicity, education and age, and education and ethnicity (see Ghitza and Gelman (2013) for an in-depth discussion on the advantages of including interactions). \\[ Pr(y_i = 1) = logit^{-1}( \\alpha_{\\rm s[i]}^{\\rm state} + \\alpha_{\\rm a[i]}^{\\rm age} + \\alpha_{\\rm r[i]}^{\\rm eth} + \\alpha_{\\rm e[i]}^{\\rm educ} + \\beta^{\\rm male} \\cdot {\\rm Male}_{\\rm i} + \\alpha_{\\rm g[i], r[i]}^{\\rm male.eth} + \\alpha_{\\rm e[i], a[i]}^{\\rm educ.age} + \\alpha_{\\rm e[i], r[i]}^{\\rm educ.eth} ) \\] where: \\[ \\begin{align*} \\alpha_{\\rm s}^{\\rm state} &amp;\\sim {\\rm Normal}(\\gamma^0 + \\gamma^{\\rm south} \\cdot {\\rm South}_{\\rm s} + \\gamma^{\\rm northcentral} \\cdot {\\rm NorthCentral}_{\\rm s} + \\gamma^{\\rm west} \\cdot {\\rm West}_{\\rm s} + \\gamma^{\\rm repvote} \\cdot {\\rm RepVote}_{\\rm s}, \\sigma^{\\rm state}) \\textrm{ for s = 1,...,50}\\\\ \\alpha_{\\rm a}^{\\rm age} &amp; \\sim {\\rm Normal}(0,\\sigma^{\\rm age}) \\textrm{ for a = 1,...,6}\\\\ \\alpha_{\\rm r}^{\\rm eth} &amp; \\sim {\\rm Normal}(0,\\sigma^{\\rm eth}) \\textrm{ for r = 1,...,4}\\\\ \\alpha_{\\rm e}^{\\rm educ} &amp; \\sim {\\rm Normal}(0,\\sigma^{\\rm educ}) \\textrm{ for e = 1,...,5}\\\\ \\alpha_{\\rm g,r}^{\\rm male.eth} &amp; \\sim {\\rm Normal}(0,\\sigma^{\\rm male.eth}) \\textrm{ for g = 1,2 and r = 1,...,4}\\\\ \\alpha_{\\rm e,a}^{\\rm educ.age} &amp; \\sim {\\rm Normal}(0,\\sigma^{\\rm educ.age}) \\textrm{ for e = 1,...,5 and a = 1,...,6}\\\\ \\alpha_{\\rm e,r}^{\\rm educ.eth} &amp; \\sim {\\rm Normal}(0,\\sigma^{\\rm educ.eth}) \\textrm{ for e = 1,...,5 and r = 1,...,4}\\\\ \\end{align*} \\] Show model explanation People without a background in multilevel modeling may be surprised to see this formulation. Why are we using terms such as \\(\\alpha_{\\rm eth}^{\\rm eth}\\) instead of the much more common method of creating an indicator variable for each state (e.g. \\(\\beta^{\\rm white} \\cdot {\\rm White}_{i} + \\beta^{\\rm black} \\cdot {\\rm Black}_{i} + ...\\))? The answer is that this approach allows to share information between the levels of each variable (e.g. different ethnicities), preventing levels with less data from being too sensitive to the few observed values. For instance, it could happen that we only surveyed ten Hispanics, and that none of them turned out to agree that employers should be able to decline abortion coverage in insurance plans. Under the typical approach, the model would take this data too seriously and consider that Hispanics necessarily oppose this statement (i.e. \\(\\beta^{\\rm hispanic} = - \\infty\\)). We know, however, that this is not the case. It may be that Hispanics are less likely to support the statement, but from such a small sample size it is impossible to know. What the multilevel model will do is to partially pool the varying intercept for Hispanics towards the average accross all ethnicities (i.e. in our model, the average across all ethnicities is fixed at zero), making it negative but far from the unrealistic negative infinity. This pooling will be data-dependent, meaning that it will pool the varying intercept towards the average more strongly the smaller the sample size in that level. In fact, if the sample size for a certain level is zero, the estimate varying intercept would be the average coefficient for all the other levels. \\(\\alpha_{\\rm a}^{\\rm age}\\): The effect of subject \\(i\\)’s age on the probability of supporting the statement. \\(\\alpha_{\\rm r}^{\\rm eth}\\): The effect of subject \\(i\\)’s ethnicity on the probability of supporting the statement. \\(\\alpha_{\\rm e}^{\\rm educ}\\): The effect of subject \\(i\\)’s education on the probability of supporting the statement. \\(\\alpha_{\\rm s}^{\\rm state}\\): The effect of subject \\(i\\)’s state on the probability of supporting the statement. As we have a state-level predictor (the Republican vote share in the 2016 election), we need to build another model in which \\(\\alpha_{\\rm s}^{\\rm state}\\) is the outcome of a linear regression with an expected value determined by an intercept \\(\\gamma^0\\), the effect of the region coded as indicator variables (with Northeast as the baseline level), and the effect of the Republican vote share \\(\\gamma^{\\rm demvote}\\). \\(\\beta^{\\rm male}\\): The average effect of being male on the probability of supporting abortion. We could have used a similar formulation as in the previous cases (i.e. \\(\\alpha_{\\rm g}^{\\rm gender} \\sim N(0, \\sigma^{\\rm gender})\\)), but having only two levels (i.e. male and female) can create some estimation problems. \\(\\alpha_{\\rm e,r}^{\\rm male.eth}\\) and \\(\\alpha_{\\rm e,r}^{\\rm educ.age}\\): In the survey literature it is common practice to include these two interactions. \\(\\alpha_{\\rm e,r}^{\\rm educ.eth}\\): In the next section we will explore public opinion on required abortion coverage at the different levels of education and ethnicity. It is, therefore, a good idea to also include this interaction. See Gelman and Hill (2007) for an introduction to multilevel modeling. The rstanarm package allows the user to conduct complicated regression analyses in Stan with the simplicity of standard formula notation in R. stan_glmer(), the function that allows to fit generalized linear multilevel models, uses the same notation as the lme4 package (see documentation here). That is, we specify the varying intercepts as (1 | group) and the interactions are expressed as (1 | group1:group2), where the : operator creates a new grouping factor that consists of the combined levels of the two groups (i.e. this is the same as pasting together the levels of both factors). However, this syntax only accepts predictors at the individual level, and thus the two state-level predictors must be expanded to the individual level (see [p. 265-266]Gelman and Hill (2007)). Notice that: \\[ \\begin{align*} \\alpha_{\\rm s}^{\\rm state} &amp;\\sim {\\rm Normal}(\\gamma^0 + \\gamma^{\\rm south} \\cdot {\\rm South}_{\\rm s} + \\gamma^{\\rm northcentral} \\cdot {\\rm NorthCentral}_{\\rm s} + \\gamma^{\\rm west} \\cdot {\\rm West}_{\\rm s} + \\gamma^{\\rm repvote} \\cdot {\\rm RepVote}_{\\rm s}, \\sigma^{\\rm state}) \\\\ &amp;= \\underbrace{\\gamma^0}_\\text{Intercept} + \\underbrace{{\\rm Normal}(0, \\sigma^{\\rm state})}_\\text{State varying intercept} + \\underbrace{\\gamma^{\\rm south} \\cdot {\\rm South}_{\\rm s} + \\gamma^{\\rm northcentral} \\cdot {\\rm NorthCentral}_{\\rm s} + \\gamma^{\\rm west} \\cdot {\\rm West}_{\\rm s} + \\gamma^{\\rm repvote} \\cdot {\\rm RepVote}_{\\rm s}}_\\text{State-level predictors expanded to the individual level} \\end{align*} \\] Consequently, we can then reexpress the model as: \\[ Pr(y_i = 1) = logit^{-1}( \\gamma^0 + \\alpha_{\\rm s[i]}^{\\rm state} + \\alpha_{\\rm a[i]}^{\\rm age} + \\alpha_{\\rm r[i]}^{\\rm eth} + \\alpha_{\\rm e[i]}^{\\rm educ} + \\beta^{\\rm male} \\cdot {\\rm Male}_{\\rm i} + \\alpha_{\\rm g[i], r[i]}^{\\rm male.eth} + \\alpha_{\\rm e[i], a[i]}^{\\rm educ.age} + \\alpha_{\\rm e[i], r[i]}^{\\rm educ.eth} + \\gamma^{\\rm south} \\cdot {\\rm South}_{\\rm s} \\\\ + \\gamma^{\\rm northcentral} \\cdot {\\rm NorthCentral}_{\\rm s} + \\gamma^{\\rm west} \\cdot {\\rm West}_{\\rm s} + \\gamma^{\\rm repvote} \\cdot {\\rm RepVote}_{\\rm s}) \\] In the previous version of the model, \\(\\alpha_{\\rm s[i]}^{\\rm state}\\) was informed by several state-level predictors. This reparametrization expands the state-level predictors at the individual level, and thus \\(\\alpha_{\\rm s[i]}^{\\rm state}\\) now represents the variance introduced by the state adjusting for the region and 2016 Republican vote share. Similarly, \\(\\gamma^0\\), which previously represented the state-level intercept, now becomes the individual-level intercept. The two parameterizations of the multilevel model are mathematically equivalent, and using one or the other is simply a matter of preference. The former one highlights the role that state-level predictos have in accounting for structured differences among the states, while the later is closer to the rstanarm syntax. # Expand state-level predictors to the individual level q_abort_10K_df&lt;- left_join(q_abort_10K_df, statepred_df, by = &quot;state&quot;) abortion state eth male age educ repvote region 1 WI White -0.5 60-69 4-Year College 0.5040799 North Central 1 NJ White -0.5 60-69 HS 0.4271581 Northeast 0 FL White -0.5 40-49 HS 0.5061884 South 1 FL White 0.5 70+ Some college 0.5061884 South 0 IL White -0.5 50-59 Some college 0.4097995 North Central 0 OK Other -0.5 18-29 Some college 0.6930474 South # Fit in stan_glmer # fit &lt;- stan_glmer(abortion ~ (1 | state) + (1 | eth) + (1 | educ) + male + # (1 | male:eth) + (1 | educ:age) + (1 | educ:eth) + # repvote + factor(region), # family = binomial(link = &quot;logit&quot;), # data = q_abort_10K_df, # prior = normal(0, 1, autoscale = TRUE), # prior_covariance = decov(scale = 0.50), # adapt_delta = 0.99, # refresh = 0, # seed = 1010) # saveRDS(fit, file = &quot;fit_mrp_1.rds&quot;) fit &lt;- readRDS(&quot;fit_mrp_1.rds&quot;) As a first pass to check whether the model is performing well, we must check that there are no warnings about divergences, failure to converge or tree depth. Fitting the model with the default settings produced a few divergent transitions, and thus we decided to try increasing adapt_delta to 0.99 and introducing stronger priors than the rstanarm defaults. After doing this, the divergences dissapeared. In the Computational Issues subsection of this case study we provide more details about divergent transitions and potential solutions. print(fit) stan_glmer family: binomial [logit] formula: abortion ~ (1 | state) + (1 | eth) + (1 | educ) + male + (1 | male:eth) + (1 | educ:age) + (1 | educ:eth) + repvote + factor(region) observations: 10000 ------ Median MAD_SD (Intercept) -1.3 0.3 male 0.3 0.1 repvote 1.9 0.3 factor(region)Northeast 0.0 0.1 factor(region)South 0.2 0.1 factor(region)West 0.0 0.1 Error terms: Groups Name Std.Dev. state (Intercept) 0.131 educ:age (Intercept) 0.231 educ:eth (Intercept) 0.099 male:eth (Intercept) 0.188 eth (Intercept) 0.341 educ (Intercept) 0.277 Num. levels: state 50, educ:age 18, educ:eth 12, male:eth 8, eth 4, educ 3 ------ * For help interpreting the printed output see ?print.stanreg * For info on the priors used see ?prior_summary.stanreg Show model interpretation Intercept (\\(\\gamma^0\\)): The global intercept corresponds to the expected outcome in the logit scale when having all the predictors equal to zero. In this case, this does not have a clear interpretation, as it is then influenced by the varying intercepts for state, age, ethnicity, education, and interactions. Furthermore, it corresponds to the impractical scenario of someone in a state with zero Republican vote share. male (\\(\\beta^{\\rm male}\\)): The median estimate for this coefficient is 0.4, with a standard error (measured using the Mean Absolute Deviation) of 0.1. Using the divide-by-four rule (Gelman, Hill, and Vehtari (2020), Chapter 13), we see that, adjusting for the other covariates, males present up to a \\(10\\% \\pm 2.5\\%\\) higher probability of supporting the right of employers to decline coverage of abortions relative to females. repvote (\\(\\gamma^{\\rm repvote}\\)): As the scale of repvote was between 0 and 1, this coefficient corresponds to the difference in probability of supporting the statement between someone that was in a state in which no one voted Republican to someone whose state voted all Republican. This is not reasonable, and therefore we start by dividing the median coefficient by 10. Doing this, we consider a difference of a 10% increase in Republican vote share. This means that we expect that someone from a state with a 55% Republican vote share has approximately \\(\\frac{1.5}{10}/4 = 4\\%\\) (\\(\\pm 1\\%\\)) higher probability of supporting the statement relative to another individual with similar characteristics from a state in which Republicans received 45% of the vote. regionSouth (\\(\\gamma^{\\rm south}\\)): According to the model, we expect that someone from a state in the south has, adjusting for the other covariates, up to a 0.1/4 = 2.5% (\\(\\pm 2.5\\%\\)) higher probability of supporting the statement relative to someone from the Northeast, which was the baseline category. The interpretation for regionNorthCentral and regionWest is similar. Error terms (\\(\\sigma^{\\rm state}\\), \\(\\sigma^{\\rm age}\\), \\(\\sigma^{\\rm eth}\\), \\(\\sigma^{\\rm educ}\\), \\(\\sigma^{\\rm male.eth}\\), \\(\\sigma^{\\rm educ.age}\\), \\(\\sigma^{\\rm educ.eth}\\)): Remember that the intercepts for the different levels of state, age, ethnicity, education, and the specified interactions are distributed following a normal distribution centered at zero and with a standard deviation that is estimated from the data. The Error terms section gives us the estimates for these group-level standard deviations. For instance, \\(\\alpha_{\\rm r}^{\\rm ethnicity} \\sim {\\rm Normal}(0, \\sigma^{\\rm ethnicity})\\), where the median estimate for \\(\\sigma^{\\rm ethnicity}\\) is 0.43. In other words, the variyng intercepts for the different ethnicity groups have a standard deviation that is estimated to be 0.43 on the logit scale, or 0.43/4 = 0.11 on the probability scale. In some cases, we may also want to check the intercepts corresponding to the individual levels of a factor. In rstanarm, this can be done using fit$coefficients. For instance, the median values for the varying intercepts of race are \\(\\alpha^{\\rm eth}_{r = {\\rm White}}\\) = 0.12, \\(\\alpha^{\\rm eth}_{r = {\\rm Black}}\\) = -0.24, \\(\\alpha^{\\rm eth}_{r = {\\rm Hispanic}}\\) = 0.06, \\(\\alpha^{\\rm eth}_{r = {\\rm Other}}\\) = 0.03. 2.2 Second Stage: Poststratification The individual-response model predicts support on the option for declining abortion coverage given a number of factor-type predictors. To go from this model to a national or sub-national estimate, we need to weight the model predictions for the different subgroups by the actual frequency of these subgroups, as expressed by the formula \\[ \\theta^{MRP} = \\frac{\\sum N_{\\rm subgroup} \\theta_{\\rm subgroup}}{\\sum N_{\\rm subgroup}} \\] where \\(\\theta^{MRP}\\) is the MRP estimate, \\(\\theta_{\\rm subgroup}\\) corresponds to the model estimate for a specific subgroup (e.g. young Hispanic men with a High School diploma in Arkansas), and \\(N_{\\rm subgroup}\\) corresponds to the number of people in that subgroup according to the ACS. For a more in-depth review of poststratification, see Chapter 13 of Gelman, Hill, and Vehtari (2020). The values of \\(\\theta_{subgroup}\\) for the different subgroups can be obtained with the posterior_epred() function. Of course, as stan_glmer() performs Bayesian inference, \\(\\theta_{subgroup}\\) for any given subgroup will not be a single point estimate but a vector of posterior draws. # Expand state level predictors to the individual level postrat_df &lt;- left_join(postrat_df, statepred_df, by = &quot;state&quot;) knitr::kable(head(postrat_df), format = &#39;markdown&#39;) X state eth male age educ n repvote region 1 AL White -0.5 18-29 No HS 23948 0.6437414 South 2 AL White -0.5 18-29 HS 59378 0.6437414 South 3 AL White -0.5 18-29 Some college 104855 0.6437414 South 4 AL White -0.5 18-29 4-Year College 37066 0.6437414 South 5 AL White -0.5 18-29 Post-grad 9378 0.6437414 South 6 AL White -0.5 30-39 No HS 14303 0.6437414 South The function posterior_epred() returns a matrix \\(P\\) with \\(D\\) rows and \\(J\\) columns, where \\(D\\) corresponds to the number of draws from the posterior distribution (in this case 1000, as we specified draws = 1000) and \\(J\\) is the number of subgroups in the poststratification table (i.e. 12,000). This matrix is multiplied by a vector \\(k\\) of length \\(J\\) that contains the number of people in each subgroup of the poststratification table. This results in a vector of length \\(D\\) that is then divided by the sum of the people considered in the poststratification table, a scalar which is calculated by adding all the values in \\(k\\). \\[\\theta^{MRP} = \\frac{P \\times k}{\\sum_j^J k_j}\\] The resulting vector \\(\\theta^{MRP}\\) contains \\(D\\) estimates for the national-level statement support. # posterior_epred returns the posterior estimates for each cell of postrat_df epred_mat &lt;- posterior_epred(fit, newdata = postrat_df, draws = 1000) epred_vec &lt;- epred_mat %*% postrat_df$n / sum(postrat_df$n) theta_mrp &lt;- c(mean = mean(epred_vec), sd = sd(epred_vec)) cat(&quot;MRP estimate mean, sd: &quot;, round(theta_mrp, 2), &quot;\\n&quot;) MRP estimate mean, sd: 0.45 0.03 Compare the estimated results (above) to the 10,000-person unadjusted sample estimate and to the full survey: sample_popn_support &lt;- c(mean = mean(q_abort_10K_df$abortion), se = sqrt(mean(q_abort_10K_df$abortion)*(1-mean(q_abort_10K_df$abortion))/nrow(df))) all_popn_support &lt;- c(mean = mean(q_abort_df$abortion), se = sqrt(mean(q_abort_df$abortion)*(1-mean(q_abort_df$abortion))/nrow(q_abort_df))) cat(&quot;Unadjusted survey sub-sample mean, sd: &quot;, round(sample_popn_support, 2), &quot;\\n&quot;) Unadjusted survey sub-sample mean, sd: 0.44 cat(&quot;Unadjusted full survey mean, sd: &quot;, round(all_popn_support, 2), &quot;\\n&quot;) Unadjusted full survey mean, sd: 0.43 0 At the national level, both the unadjusted sample estimate and the MRP estimate are quite close to the results of the full survey. In other words, MRP is not providing a notable advantage against the unadjusted sample national estimates. However, it is important to clarify that we were somewhat lucky in obtaining this result as a product of using data from the CCES, a high quality survey that intends to be representative (and appears to be, at least with respect to the variables considered in our poststratification table). Many real-world surveys are not as representative relative to the variables considered in the poststratification step, and in these cases MRP will help correcting the biased estimates from the unadjusted survey. We will see an example of this in section (to-be-crosslined), where we exemplify how MRP adjusts a clearly biased sample. 2.3 MRP for Small Area Estimation At the sub-national level, the utility of MRP becomes apparent. To demonstrate, we estimate the per-state support for employer’s right to decline coverage of abortion: \\[ y_{\\rm state}^{MRP} = \\frac{\\sum_{\\rm subgroup \\in state} N_{\\rm subgroup} \\theta_{\\rm subgroup}}{\\sum_{\\rm subgroup \\in state} N_{\\rm subgroup}} \\] # National mean pop_estimate_all &lt;- mean(q_abort_df$abortion) # Per state mean, raw counts state_estimates_all &lt;- q_abort_df %&gt;% group_by(state) %&gt;% summarise(estimate = mean(abortion)) state_n_all &lt;- q_abort_df %&gt;% group_by(state) %&gt;% summarise(N_all = n()) state_estimates_all$statename &lt;- state_ab # Create empty dataframe num_states = length(state_fips) state_df &lt;- data.frame( state_fips = state_fips, state = state_ab, mrp_state_support = rep(NA, num_states), mrp_state_sd = rep(NA, num_states), sample_state_support = rep(NA, num_states), all_state_support = rep(NA, num_states), N = rep(NA, num_states), N_all = rep(NA, num_states) ) state_df$state = fct_reorder(state_df$state, statepred_df$repvote) # order L-R == voteshare GOP # The matrix P and the poststratification table contain 12,000 rows. # Loop over state ID, fill in postrat cells for that state. for(i in 1:length(levels(postrat_df$state))) { filtering_condition &lt;- which(postrat_df$state == state_df$state[i]) P_filtered &lt;- epred_mat[ ,filtering_condition] k_filtered &lt;- postrat_df[filtering_condition, ]$n # Poststratification step poststrat_prob_state &lt;- P_filtered %*% k_filtered / sum(k_filtered) # This is the MRP estimate for the state state_df$mrp_state_support[i] &lt;- mean(poststrat_prob_state) state_df$mrp_state_sd[i] &lt;- sd(poststrat_prob_state) # This is the 10,000 sample survey estimate for the state, this time filtering df state_df$sample_state_support[i] &lt;- mean(q_abort_10K_df$abortion[q_abort_10K_df$state == state_ab[i]]) # This is the 60000-person survey estimate for the state state_df$all_state_support[i] &lt;- state_estimates_all$estimate[state_estimates_all$statename == state_ab[i]] # Sample size in state i for the 10,000 sample survey state_df$N[i] &lt;- nrow(q_abort_10K_df[q_abort_10K_df$state == state_ab[i], ]) # Sample size in state i for the full 60,000 survey state_df$N_all[i] &lt;- state_n_all$N_all[state_n_all$state==state_ab[i]] } We start by plotting the estimates by state from the unadjusted 10,000-person sample. Again, the states are ordered by Republican vote in the 2016 election, and therefore we expect that statement support will follow an increasing trend. In states with small samples, we see considerably wide 95% confidence intervals. We can add the MRP-adjusted estimates to this plot. In general, MRP produces less extreme values by partially pooling information across the factor levels. To illustrate this, we can compare the sample and MRP estimates with the results form the full 60,000-respondent CCES. Of course, in any applied situation we would be using the full survey, but as we took a 10,000 person sample the full 60,000-respondent survey serves as a reference point. Overall, the MRP estimates are closer to the full survey estimates. This is particularly clear for the states with a smaller sample size. As a final way of presenting the MRP estimates, we can plot them on a US map. The symmetric color range goes from 10% to 90% support, as this scale allows for comparison with the other maps. However, the MRP estimates for statement support are concentrated in a relatively small range, which makes the colors appear muted. 2.3.1 Estimation for subgroups within sub-national units MRP can also be used to obtain estimates for more complex cases, such as subgroups within states. For instance, we can study support for declining coverage of abortions by state and ethnicity within state. For clarity, we order the races according to their support for the statement. Similarly, we can look at the outcome in ethnicity-education subgroups by state. 2.4 Adjusting for Nonrepresentative Surveys We have already introduced that MRP is an effective statistical adjustment method to correct for differences between the sample and target population for a set of key variables. We start this second example by obtaining an artificially nonrepresentative sample that gives more weight to respondents that are older, male, and from Republican states. set.seed(1010) # We add the state-level predictors to q_abort_df q_abort_df &lt;- left_join(q_abort_df, statepred_df, by = &quot;state&quot;) # We take a sample from q_abort_df giving extra weight to respondents that are older, male, white, and from Republican states. extra_wt_df &lt;- q_abort_df %&gt;% sample_n(5000, weight = I(5*repvote + (age==&quot;18-29&quot;)*0.5 + (age==&quot;30-39&quot;)*1 + (age==&quot;40-49&quot;)*2 + (age==&quot;50-59&quot;)*4 + (age==&quot;60-69&quot;)*6 + (age==&quot;70+&quot;)*8 + (male==1)*20 + (eth==&quot;White&quot;)*1.05)) The following plots show how this reweighted sample differs from the population. Now there is a strong age trend in the sample, not present in the population; compare this plot to the earlier plots in the exploratory data analysis section. As before, we fit the model to the data. Next we poststratify to the state level, as in the [previous section](#postrat-state}. epred2_mat &lt;- posterior_epred(fit2, newdata = postrat_df, draws = 100) epred2_vec &lt;- epred2_mat %*% postrat_df$n / sum(postrat_df$n) theta2_mrp &lt;- c(mean = mean(epred2_vec), sd = sd(epred2_vec)) cat(&quot;MRP estimates: &quot;, round(theta2_mrp, 2), &quot;\\n&quot;) MRP estimates: 0.44 0.01 extra_wt_popn_support &lt;- c(mean = mean(extra_wt_df$abortion), se = sqrt(mean(extra_wt_df$abortion)*(1-mean(extra_wt_df$abortion))/nrow(extra_wt_df))) cat(&quot;Extra-weight survey estimate: &quot;, round(extra_wt_popn_support, 2), &quot;\\n&quot;) Extra-weight survey estimate: 0.46 0.01 The nonrepresentative sample produces estimates that are differnt from those obtained from a random subsample of the survey in the previous section. We plot the estimates by state from the extra-weighted sample. Again, the states are ordered by Republican vote in the 2016 election, and therefore we expect that statement support will follow an increasing trend. MRP seems to partially correct for the nonrepresentative sample, furthermore, the MRP national and sub-national estimates based on the nonrepresentative sample are, overall, much closer to the 60,000-person survey than the biased unadjusted sample estimates. 2.5 Practical Considerations 2.5.1 Census incompletness and uncertainty There are two main problems we can encounter when dealing with census data. It is possible that some variables that we may want to use for poststratification are not available. For instance, party ID is not registered in the US census and ethnicity is not registered in the French census. This additional information can be included in the poststratification table based on other (generally smaller) surveys that contain these variables. A great number of factors may require a large poststratification table, which in turn can result in unreliable census estimates. The American Community Survey we use in this case study does not only provide estimates of the actual figures that would have been obtained if the entire population was sampled, it also includes a measure of uncertainty around these estimates. Ideally, this uncertainty should be taken into account in the poststratification. For simplicity, this introduction has skipped this step, but this could mean the MRP-based estimates present an underestimated uncertainty. 2.5.2 Nonreponse and missing data We have seen that MRP is a method that can mitigate potential biases in the sample, but it is not a substitute for a better data collection effort that tries to minimize systematic nonresponse patterns. 2.5.3 Model complexity MRP depends upon the use of a regularized model (i.e. that prevents overfitting by controlling its complexity). Different approaches can be used for this goal (e.g. non-multilevel regression, random forests, or a neural network; see Bisbee (2019) for an implementation that uses Bayesian Additive Regression Trees), but there are several advantages of using a Bayesian multilevel model. First, the multilevel structure allows for partially pooling information across different levels of a factor, which can be crucial when dealing with certain levels with few samples. Second, the Bayesian approach propagates uncertainty across the modeling, and thus gives more realistic confidence intervals. Apart from selecting the factors included in the poststratification table, there are several decisions the modeler should make. As we have already mentioned, adding relevant state-level predictors to the model often improves results, particularly when we have few data about some states. The inclusion of interactions can also be benefitial, especially when studying subgroups within subgroups (e.g. demographic subgroups within states; Ghitza and Gelman (2013)). Lastly, the use of structured priors can also serve to reduce both bias and variance by sharing information across the levels of a factor (Gao et al. (2020)). 2.5.4 Empty cells in the poststratification table It is very frequent that some of the cells in the poststratification table are empty, meaning that there are not anyone that fulfills some specific combination of factors. For instance, in a small state there can be no people younger than 30, without a high school degree, and earning more than $500,000 a year. In our example, we made sure that all the cells in the poststratification table were present even if the weight of that cell was zero, but this was only for illustrative purposes. 2.5.5 Subnational units not represented in the survey It is fairly common for small-sample surveys not to include anyone from a particular subnational unit. For instance, a small national survey in the US may not include any participant from Wyoming. An important advantage of MRP is that we can still produce estimates for this state using the information from the participants in other states. Going back to the first parametrization of the multilevel model that we presented, \\(\\alpha^{\\rm state}_{\\rm s = Wyoming}\\) will be calculated based on the region and Republican voteshare of the 2016 – even in the abscence of information about the effect of residing in Wyoming specifically. As we have already explained, including subnational-level predictors is always recommended, particularly considering that data at the subnational level is easy to obtain in many cases. However, when dealing with subnational units that are not represented in our survey these predictors become even more central, as they are able to capture structured differences among the states and therefore allow for more precise estimation in the missing subnational areas. 2.5.6 Computational issues Stan uses Hamiltonian Monte Carlo to explore the posterior distribution. In some cases, the geometry of the posterior distribution is too complex, making the Hamiltonian Monte Carlo “diverge”. This produces a warning indicating the presence of divergent transitions after warmup, something that implies the model could present biased estimates (see Betancourt (2017) for more details). Usually, a few divergent transitions do not indicate a serious problem. There are, in any case, three potential solutions to this problem that do not involve reformulating the model: (i) a non-centered parametization; (ii) increasing the adapt_delta parameter; and (iii) including stronger priors. Fortunately we don’t have to worry about (i), as rstanarm already provides a non-centered parametization for the model. Therefore, we can focus on the other two. Exploring the posterior distribution is somewhat similar as cartographing a mountainous terrain, and a divergent transition is similar to falling down a very steep slope, with the consequence of not being able to correctly map that area. In this analogy, what the cartographer could do is moving through the steep slope giving smaller steps to avoid falling. In Stan, the step size is set up automatically, but we can change a parameter called adapt_delta that controls the step size. By default we have that adapt_delta = .95, but we can increase that number to make Stan take smaller steps, which should reduce the number of divergent transitions. The maximum value we can set for adapt_delta is close (but necessarely less than) 1, with the downside that an increase implies a somewhat slower exploration of the posterior distribution. Usually, an adapt_delta = 0.99 works well if we only have a few divergent transitions. However, there are cases in which increasing adapt_delta is not sufficient, and divergent transitions still occur. In this case, introducing weakly informative priors can be extremelly helpful. Although rstanarm provides by default weakly informative priors, in most applications these tend to be too weak. By using more reasonable priors, we make the posterior distribution easier to explore. The priors for the scaled coefficients are \\({\\rm Normal}(0, 2.5)\\). When the coefficients are not scaled, rstanarm will automatically adjust the scaling of the priors as detailed in the prior vignette. In most cases, and particularly when we find computational issues, it is reasonable to give stronger priors on the scaled coefficients such as \\({\\rm Normal}(0, 1)\\). Multilevel models with multiple group-level standard deviation parameters (e.g. \\(\\sigma^{\\rm age}\\), \\(\\sigma^{\\rm eth}\\), \\(\\sigma^{\\rm educ.eth}\\), etc.) tend to be hard to estimate and sometimes present serious computational issues. The default prior for the covariance matrix is decov(reg. = 1, conc. = 1, shape = 1, scale = 1). However, in a varying-intercept model such as this one (i.e. with structure (1 | a) + (1 | b) + ... + (1 | n)) the group-level standard deviations are independent of each other, and therefore the prior is simply a gamma distribution with some shape and scale. Consequently, decov(shape = 1, scale = 1) implies a weakly informative prior \\({\\rm Gamma(shape = 1, scale = 1)} = {\\rm Exponential(scale = 1)}\\) on each group-level standard deviation. This is too weak in most situations, and using something like \\({\\rm Exponential(scale = 0.5)}\\) can be crucial for stabilizing computation. Therefore, something like this has much fewer chances of running into computational issues than simply leaving the defaults: fit &lt;- stan_glmer(abortion ~ (1 | state) + (1 | eth) + (1 | educ) + (1 | age) + male + (1 | male:eth) + (1 | educ:age) + (1 | educ:eth) + repvote + factor(region), family = binomial(link = &quot;logit&quot;), data = df, prior = normal(0, 1, autoscale = TRUE), prior_covariance = decov(scale = 0.50), adapt_delta = 0.99, refresh = 0, seed = 1010) More details about divergent transitions can be found in the Brief Guide to Stan’s Warnings and in the Stan Reference Manual. More information and references about priors can be found in the Prior Choice Recommendations Wiki. Betancourt, Michael. 2017. “A Conceptual Introduction to Hamiltonian Monte Carlo.” arXiv Preprint arXiv:1701.02434. Bisbee, James. 2019. “BARP: Improving Mister P Using Bayesian Additive Regression Trees.” American Political Science Review 113 (4): 1060–5. Buttice, Matthew K, and Benjamin Highton. 2013. “How Does Multilevel Regression and Poststratification Perform with Conventional National Surveys?” Political Analysis 21 (4). Downes, Marnie, Lyle C Gurrin, Dallas R English, Jane Pirkis, Dianne Currier, Matthew J Spittal, and John B Carlin. 2018. “Multilevel Regression and Poststratification: A Modeling Approach to Estimating Population Quantities from Highly Selected Survey Samples.” American Journal of Epidemiology 187 (8): 1780–90. Gao, Yuxiang, Lauren Kennedy, Daniel Simpson, Andrew Gelman, and others. 2020. “Improving Multilevel Regression and Poststratification with Structured Priors.” Bayesian Analysis. Gelman, Andrew, and Jennifer Hill. 2007. Data Analysis Using Regression and Multilevelhierarchical Models. Vol. 1. Cambridge University Press New York, NY, USA. Gelman, Andrew, Jennifer Hill, and Aki Vehtari. 2020. Regression and Other Stories. Cambridge University Press. Ghitza, Yair, and Andrew Gelman. 2013. “Deep Interactions with Mrp: Election Turnout and Voting Patterns Among Small Electoral Subgroups.” American Journal of Political Science 57 (3): 762–76. Kiewiet de Jonge, Chad P, Gary Langer, and Sofi Sinozich. 2018. “Predicting State Presidential Election Results Using National Tracking Polls and Multilevel Regression with Poststratification (Mrp).” Public Opinion Quarterly 82 (3): 419–46. Lax, Jeffrey R, and Justin H Phillips. 2009a. “Gay Rights in the States: Public Opinion and Policy Responsiveness.” American Political Science Review 103 (3): 367–86. ———. 2009b. “How Should We Estimate Public Opinion in the States?” American Journal of Political Science 53 (1): 107–21. Park, David K, Andrew Gelman, and Joseph Bafumi. 2004. “Bayesian Multilevel Estimation with Poststratification: State-Level Estimates from National Polls.” Political Analysis 12 (4): 375–85. Wang, Wei, David Rothschild, Sharad Goel, and Andrew Gelman. 2015. “Forecasting Elections with Non-Representative Polls.” International Journal of Forecasting 31 (3): 980–91. References "]]
